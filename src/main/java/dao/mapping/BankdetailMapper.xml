<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="main.java.dao.BankdetailMapper" >
  <resultMap id="BaseResultMap" type="main.java.vo.Bankdetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="inorout" property="inorout" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="sum" property="sum" jdbcType="DOUBLE" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="byorto" property="byorto" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, inorout, money, sum, time, byorto
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="main.java.vo.BankdetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bankdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_bankdetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_bankdetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="main.java.vo.BankdetailExample" >
    delete from t_bankdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="main.java.vo.Bankdetail" >
    insert into t_bankdetail (id, inorout, money, 
      sum, time, byorto)
    values (#{id,jdbcType=INTEGER}, #{inorout,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, 
      #{sum,jdbcType=DOUBLE}, #{time,jdbcType=VARCHAR}, #{byorto,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="main.java.vo.Bankdetail" >
    insert into t_bankdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="inorout != null" >
        inorout,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="sum != null" >
        sum,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="byorto != null" >
        byorto,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="inorout != null" >
        #{inorout,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="sum != null" >
        #{sum,jdbcType=DOUBLE},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="byorto != null" >
        #{byorto,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="main.java.vo.BankdetailExample" resultType="java.lang.Integer" >
    select count(*) from t_bankdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_bankdetail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.inorout != null" >
        inorout = #{record.inorout,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.sum != null" >
        sum = #{record.sum,jdbcType=DOUBLE},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.byorto != null" >
        byorto = #{record.byorto,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_bankdetail
    set id = #{record.id,jdbcType=INTEGER},
      inorout = #{record.inorout,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      sum = #{record.sum,jdbcType=DOUBLE},
      time = #{record.time,jdbcType=VARCHAR},
      byorto = #{record.byorto,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="main.java.vo.Bankdetail" >
    update t_bankdetail
    <set >
      <if test="inorout != null" >
        inorout = #{inorout,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="sum != null" >
        sum = #{sum,jdbcType=DOUBLE},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="byorto != null" >
        byorto = #{byorto,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="main.java.vo.Bankdetail" >
    update t_bankdetail
    set inorout = #{inorout,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      sum = #{sum,jdbcType=DOUBLE},
      time = #{time,jdbcType=VARCHAR},
      byorto = #{byorto,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>